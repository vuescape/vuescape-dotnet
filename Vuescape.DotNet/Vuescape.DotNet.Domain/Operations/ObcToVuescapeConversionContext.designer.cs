// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.191.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Vuescape.DotNet.Domain
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ObcToVuescapeConversionContext : IModel<ObcToVuescapeConversionContext>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ObcToVuescapeConversionContext"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ObcToVuescapeConversionContext left, ObcToVuescapeConversionContext right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ObcToVuescapeConversionContext"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ObcToVuescapeConversionContext left, ObcToVuescapeConversionContext right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ObcToVuescapeConversionContext other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ReportConversionMode.IsEqualTo(other.ReportConversionMode)
                      && this.QueryString.IsEqualTo(other.QueryString, StringComparer.Ordinal)
                      && this.BaseUrlToken.IsEqualTo(other.BaseUrlToken, StringComparer.Ordinal)
                      && this.BaseUrl.IsEqualTo(other.BaseUrl, StringComparer.Ordinal)
                      && this.CultureKind.IsEqualTo(other.CultureKind)
                      && this.LocalTimeZone.IsEqualTo(other.LocalTimeZone)
                      && this.ShouldSummaryRowsDisplayInFooter.IsEqualTo(other.ShouldSummaryRowsDisplayInFooter);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ObcToVuescapeConversionContext);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ReportConversionMode)
            .Hash(this.QueryString)
            .Hash(this.BaseUrlToken)
            .Hash(this.BaseUrl)
            .Hash(this.CultureKind)
            .Hash(this.LocalTimeZone)
            .Hash(this.ShouldSummaryRowsDisplayInFooter)
            .Value;

        /// <inheritdoc />
        public object Clone() => this.DeepClone();

        /// <inheritdoc />
        public ObcToVuescapeConversionContext DeepClone()
        {
            var result = new ObcToVuescapeConversionContext(
                                 this.ReportConversionMode.DeepClone(),
                                 this.QueryString?.DeepClone(),
                                 this.BaseUrlToken?.DeepClone(),
                                 this.BaseUrl?.DeepClone(),
                                 this.CultureKind?.DeepClone(),
                                 this.LocalTimeZone?.DeepClone(),
                                 this.ShouldSummaryRowsDisplayInFooter.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ReportConversionMode" />.
        /// </summary>
        /// <param name="reportConversionMode">The new <see cref="ReportConversionMode" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ObcToVuescapeConversionContext" /> using the specified <paramref name="reportConversionMode" /> for <see cref="ReportConversionMode" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ObcToVuescapeConversionContext DeepCloneWithReportConversionMode(ReportConversionMode reportConversionMode)
        {
            var result = new ObcToVuescapeConversionContext(
                                 reportConversionMode,
                                 this.QueryString?.DeepClone(),
                                 this.BaseUrlToken?.DeepClone(),
                                 this.BaseUrl?.DeepClone(),
                                 this.CultureKind?.DeepClone(),
                                 this.LocalTimeZone?.DeepClone(),
                                 this.ShouldSummaryRowsDisplayInFooter.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="QueryString" />.
        /// </summary>
        /// <param name="queryString">The new <see cref="QueryString" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ObcToVuescapeConversionContext" /> using the specified <paramref name="queryString" /> for <see cref="QueryString" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ObcToVuescapeConversionContext DeepCloneWithQueryString(string queryString)
        {
            var result = new ObcToVuescapeConversionContext(
                                 this.ReportConversionMode.DeepClone(),
                                 queryString,
                                 this.BaseUrlToken?.DeepClone(),
                                 this.BaseUrl?.DeepClone(),
                                 this.CultureKind?.DeepClone(),
                                 this.LocalTimeZone?.DeepClone(),
                                 this.ShouldSummaryRowsDisplayInFooter.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="BaseUrlToken" />.
        /// </summary>
        /// <param name="baseUrlToken">The new <see cref="BaseUrlToken" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ObcToVuescapeConversionContext" /> using the specified <paramref name="baseUrlToken" /> for <see cref="BaseUrlToken" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ObcToVuescapeConversionContext DeepCloneWithBaseUrlToken(string baseUrlToken)
        {
            var result = new ObcToVuescapeConversionContext(
                                 this.ReportConversionMode.DeepClone(),
                                 this.QueryString?.DeepClone(),
                                 baseUrlToken,
                                 this.BaseUrl?.DeepClone(),
                                 this.CultureKind?.DeepClone(),
                                 this.LocalTimeZone?.DeepClone(),
                                 this.ShouldSummaryRowsDisplayInFooter.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="BaseUrl" />.
        /// </summary>
        /// <param name="baseUrl">The new <see cref="BaseUrl" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ObcToVuescapeConversionContext" /> using the specified <paramref name="baseUrl" /> for <see cref="BaseUrl" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ObcToVuescapeConversionContext DeepCloneWithBaseUrl(string baseUrl)
        {
            var result = new ObcToVuescapeConversionContext(
                                 this.ReportConversionMode.DeepClone(),
                                 this.QueryString?.DeepClone(),
                                 this.BaseUrlToken?.DeepClone(),
                                 baseUrl,
                                 this.CultureKind?.DeepClone(),
                                 this.LocalTimeZone?.DeepClone(),
                                 this.ShouldSummaryRowsDisplayInFooter.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="CultureKind" />.
        /// </summary>
        /// <param name="cultureKind">The new <see cref="CultureKind" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ObcToVuescapeConversionContext" /> using the specified <paramref name="cultureKind" /> for <see cref="CultureKind" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ObcToVuescapeConversionContext DeepCloneWithCultureKind(CultureKind? cultureKind)
        {
            var result = new ObcToVuescapeConversionContext(
                                 this.ReportConversionMode.DeepClone(),
                                 this.QueryString?.DeepClone(),
                                 this.BaseUrlToken?.DeepClone(),
                                 this.BaseUrl?.DeepClone(),
                                 cultureKind,
                                 this.LocalTimeZone?.DeepClone(),
                                 this.ShouldSummaryRowsDisplayInFooter.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="LocalTimeZone" />.
        /// </summary>
        /// <param name="localTimeZone">The new <see cref="LocalTimeZone" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ObcToVuescapeConversionContext" /> using the specified <paramref name="localTimeZone" /> for <see cref="LocalTimeZone" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ObcToVuescapeConversionContext DeepCloneWithLocalTimeZone(StandardTimeZone? localTimeZone)
        {
            var result = new ObcToVuescapeConversionContext(
                                 this.ReportConversionMode.DeepClone(),
                                 this.QueryString?.DeepClone(),
                                 this.BaseUrlToken?.DeepClone(),
                                 this.BaseUrl?.DeepClone(),
                                 this.CultureKind?.DeepClone(),
                                 localTimeZone,
                                 this.ShouldSummaryRowsDisplayInFooter.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ShouldSummaryRowsDisplayInFooter" />.
        /// </summary>
        /// <param name="shouldSummaryRowsDisplayInFooter">The new <see cref="ShouldSummaryRowsDisplayInFooter" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ObcToVuescapeConversionContext" /> using the specified <paramref name="shouldSummaryRowsDisplayInFooter" /> for <see cref="ShouldSummaryRowsDisplayInFooter" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ObcToVuescapeConversionContext DeepCloneWithShouldSummaryRowsDisplayInFooter(bool shouldSummaryRowsDisplayInFooter)
        {
            var result = new ObcToVuescapeConversionContext(
                                 this.ReportConversionMode.DeepClone(),
                                 this.QueryString?.DeepClone(),
                                 this.BaseUrlToken?.DeepClone(),
                                 this.BaseUrl?.DeepClone(),
                                 this.CultureKind?.DeepClone(),
                                 this.LocalTimeZone?.DeepClone(),
                                 shouldSummaryRowsDisplayInFooter);

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"Vuescape.DotNet.Domain.ObcToVuescapeConversionContext: ReportConversionMode = {this.ReportConversionMode.ToString() ?? "<null>"}, QueryString = {this.QueryString?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, BaseUrlToken = {this.BaseUrlToken?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, BaseUrl = {this.BaseUrl?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, CultureKind = {this.CultureKind?.ToString() ?? "<null>"}, LocalTimeZone = {this.LocalTimeZone?.ToString() ?? "<null>"}, ShouldSummaryRowsDisplayInFooter = {this.ShouldSummaryRowsDisplayInFooter.ToString(CultureInfo.InvariantCulture) ?? "<null>"}.");

            return result;
        }
    }
}