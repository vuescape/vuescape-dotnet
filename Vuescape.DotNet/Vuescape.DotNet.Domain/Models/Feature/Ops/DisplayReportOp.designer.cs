// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.195.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Vuescape.DotNet.Domain
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.DataStructure;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class DisplayReportOp : IModel<DisplayReportOp>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="DisplayReportOp"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(DisplayReportOp left, DisplayReportOp right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="DisplayReportOp"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(DisplayReportOp left, DisplayReportOp right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(DisplayReportOp other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.LinkedResource.IsEqualTo(other.LinkedResource)
                      && this.TargetedPaneKind.IsEqualTo(other.TargetedPaneKind)
                      && this.InitialWidth.IsEqualTo(other.InitialWidth)
                      && this.MinimumWidth.IsEqualTo(other.MinimumWidth)
                      && this.MaximumWidth.IsEqualTo(other.MaximumWidth)
                      && this.ReportPaneTitleBarButtons.IsEqualTo(other.ReportPaneTitleBarButtons);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as DisplayReportOp);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.LinkedResource)
            .Hash(this.TargetedPaneKind)
            .Hash(this.InitialWidth)
            .Hash(this.MinimumWidth)
            .Hash(this.MaximumWidth)
            .Hash(this.ReportPaneTitleBarButtons)
            .Value;

        /// <inheritdoc />
        public new DisplayReportOp DeepClone() => (DisplayReportOp)this.DeepCloneInternal();

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public override LinkedResourceOpBase DeepCloneWithLinkedResource(ILinkedResource linkedResource)
        {
            var result = new DisplayReportOp(
                                 linkedResource,
                                 this.TargetedPaneKind.DeepClone(),
                                 this.InitialWidth?.DeepClone(),
                                 this.MinimumWidth?.DeepClone(),
                                 this.MaximumWidth?.DeepClone(),
                                 this.ReportPaneTitleBarButtons?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="TargetedPaneKind" />.
        /// </summary>
        /// <param name="targetedPaneKind">The new <see cref="TargetedPaneKind" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="DisplayReportOp" /> using the specified <paramref name="targetedPaneKind" /> for <see cref="TargetedPaneKind" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public DisplayReportOp DeepCloneWithTargetedPaneKind(PaneKind targetedPaneKind)
        {
            var result = new DisplayReportOp(
                                 this.LinkedResource?.DeepClone(),
                                 targetedPaneKind,
                                 this.InitialWidth?.DeepClone(),
                                 this.MinimumWidth?.DeepClone(),
                                 this.MaximumWidth?.DeepClone(),
                                 this.ReportPaneTitleBarButtons?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="InitialWidth" />.
        /// </summary>
        /// <param name="initialWidth">The new <see cref="InitialWidth" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="DisplayReportOp" /> using the specified <paramref name="initialWidth" /> for <see cref="InitialWidth" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public DisplayReportOp DeepCloneWithInitialWidth(int? initialWidth)
        {
            var result = new DisplayReportOp(
                                 this.LinkedResource?.DeepClone(),
                                 this.TargetedPaneKind.DeepClone(),
                                 initialWidth,
                                 this.MinimumWidth?.DeepClone(),
                                 this.MaximumWidth?.DeepClone(),
                                 this.ReportPaneTitleBarButtons?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="MinimumWidth" />.
        /// </summary>
        /// <param name="minimumWidth">The new <see cref="MinimumWidth" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="DisplayReportOp" /> using the specified <paramref name="minimumWidth" /> for <see cref="MinimumWidth" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public DisplayReportOp DeepCloneWithMinimumWidth(int? minimumWidth)
        {
            var result = new DisplayReportOp(
                                 this.LinkedResource?.DeepClone(),
                                 this.TargetedPaneKind.DeepClone(),
                                 this.InitialWidth?.DeepClone(),
                                 minimumWidth,
                                 this.MaximumWidth?.DeepClone(),
                                 this.ReportPaneTitleBarButtons?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="MaximumWidth" />.
        /// </summary>
        /// <param name="maximumWidth">The new <see cref="MaximumWidth" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="DisplayReportOp" /> using the specified <paramref name="maximumWidth" /> for <see cref="MaximumWidth" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public DisplayReportOp DeepCloneWithMaximumWidth(int? maximumWidth)
        {
            var result = new DisplayReportOp(
                                 this.LinkedResource?.DeepClone(),
                                 this.TargetedPaneKind.DeepClone(),
                                 this.InitialWidth?.DeepClone(),
                                 this.MinimumWidth?.DeepClone(),
                                 maximumWidth,
                                 this.ReportPaneTitleBarButtons?.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ReportPaneTitleBarButtons" />.
        /// </summary>
        /// <param name="reportPaneTitleBarButtons">The new <see cref="ReportPaneTitleBarButtons" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="DisplayReportOp" /> using the specified <paramref name="reportPaneTitleBarButtons" /> for <see cref="ReportPaneTitleBarButtons" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public DisplayReportOp DeepCloneWithReportPaneTitleBarButtons(ReportPaneTitleBarButtons? reportPaneTitleBarButtons)
        {
            var result = new DisplayReportOp(
                                 this.LinkedResource?.DeepClone(),
                                 this.TargetedPaneKind.DeepClone(),
                                 this.InitialWidth?.DeepClone(),
                                 this.MinimumWidth?.DeepClone(),
                                 this.MaximumWidth?.DeepClone(),
                                 reportPaneTitleBarButtons);

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        protected override LinkedResourceOpBase DeepCloneInternal()
        {
            var result = new DisplayReportOp(
                                 this.LinkedResource?.DeepClone(),
                                 this.TargetedPaneKind.DeepClone(),
                                 this.InitialWidth?.DeepClone(),
                                 this.MinimumWidth?.DeepClone(),
                                 this.MaximumWidth?.DeepClone(),
                                 this.ReportPaneTitleBarButtons?.DeepClone());

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"Vuescape.DotNet.Domain.DisplayReportOp: LinkedResource = {this.LinkedResource?.ToString() ?? "<null>"}, TargetedPaneKind = {this.TargetedPaneKind.ToString() ?? "<null>"}, InitialWidth = {this.InitialWidth?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, MinimumWidth = {this.MinimumWidth?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, MaximumWidth = {this.MaximumWidth?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, ReportPaneTitleBarButtons = {this.ReportPaneTitleBarButtons?.ToString() ?? "<null>"}.");

            return result;
        }
    }
}