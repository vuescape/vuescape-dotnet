// --------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//   Generated using OBeautifulCode.CodeGen.ModelObject (1.0.199.0)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Vuescape.DotNet.Domain
{
    using global::System;
    using global::System.CodeDom.Compiler;
    using global::System.Collections.Concurrent;
    using global::System.Collections.Generic;
    using global::System.Collections.ObjectModel;
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Globalization;
    using global::System.Linq;

    using global::OBeautifulCode.Cloning.Recipes;
    using global::OBeautifulCode.Equality.Recipes;
    using global::OBeautifulCode.Type;
    using global::OBeautifulCode.Type.Recipes;

    using static global::System.FormattableString;

    [Serializable]
    public partial class ColumnDefinition : IModel<ColumnDefinition>
    {
        /// <summary>
        /// Determines whether two objects of type <see cref="ColumnDefinition"/> are equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are equal; otherwise false.</returns>
        public static bool operator ==(ColumnDefinition left, ColumnDefinition right)
        {
            if (ReferenceEquals(left, right))
            {
                return true;
            }

            if (ReferenceEquals(left, null) || ReferenceEquals(right, null))
            {
                return false;
            }

            var result = left.Equals(right);

            return result;
        }

        /// <summary>
        /// Determines whether two objects of type <see cref="ColumnDefinition"/> are not equal.
        /// </summary>
        /// <param name="left">The object to the left of the equality operator.</param>
        /// <param name="right">The object to the right of the equality operator.</param>
        /// <returns>true if the two items are not equal; otherwise false.</returns>
        public static bool operator !=(ColumnDefinition left, ColumnDefinition right) => !(left == right);

        /// <inheritdoc />
        public bool Equals(ColumnDefinition other)
        {
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (ReferenceEquals(other, null))
            {
                return false;
            }

            var result = this.ColumnWidthBehavior.IsEqualTo(other.ColumnWidthBehavior)
                      && this.ColumnWrapBehavior.IsEqualTo(other.ColumnWrapBehavior)
                      && this.Width.IsEqualTo(other.Width)
                      && this.WidthUnitOfMeasure.IsEqualTo(other.WidthUnitOfMeasure)
                      && this.IsFrozen.IsEqualTo(other.IsFrozen);

            return result;
        }

        /// <inheritdoc />
        public override bool Equals(object obj) => this == (obj as ColumnDefinition);

        /// <inheritdoc />
        public override int GetHashCode() => HashCodeHelper.Initialize()
            .Hash(this.ColumnWidthBehavior)
            .Hash(this.ColumnWrapBehavior)
            .Hash(this.Width)
            .Hash(this.WidthUnitOfMeasure)
            .Hash(this.IsFrozen)
            .Value;

        /// <inheritdoc />
        public object Clone() => this.DeepClone();

        /// <inheritdoc />
        public ColumnDefinition DeepClone()
        {
            var result = new ColumnDefinition(
                                 this.ColumnWidthBehavior.DeepClone(),
                                 this.ColumnWrapBehavior.DeepClone(),
                                 this.Width?.DeepClone(),
                                 this.WidthUnitOfMeasure?.DeepClone(),
                                 this.IsFrozen.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ColumnWidthBehavior" />.
        /// </summary>
        /// <param name="columnWidthBehavior">The new <see cref="ColumnWidthBehavior" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ColumnDefinition" /> using the specified <paramref name="columnWidthBehavior" /> for <see cref="ColumnWidthBehavior" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ColumnDefinition DeepCloneWithColumnWidthBehavior(ColumnWidthBehavior columnWidthBehavior)
        {
            var result = new ColumnDefinition(
                                 columnWidthBehavior,
                                 this.ColumnWrapBehavior.DeepClone(),
                                 this.Width?.DeepClone(),
                                 this.WidthUnitOfMeasure?.DeepClone(),
                                 this.IsFrozen.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="ColumnWrapBehavior" />.
        /// </summary>
        /// <param name="columnWrapBehavior">The new <see cref="ColumnWrapBehavior" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ColumnDefinition" /> using the specified <paramref name="columnWrapBehavior" /> for <see cref="ColumnWrapBehavior" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ColumnDefinition DeepCloneWithColumnWrapBehavior(ColumnWrapBehavior columnWrapBehavior)
        {
            var result = new ColumnDefinition(
                                 this.ColumnWidthBehavior.DeepClone(),
                                 columnWrapBehavior,
                                 this.Width?.DeepClone(),
                                 this.WidthUnitOfMeasure?.DeepClone(),
                                 this.IsFrozen.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="Width" />.
        /// </summary>
        /// <param name="width">The new <see cref="Width" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ColumnDefinition" /> using the specified <paramref name="width" /> for <see cref="Width" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ColumnDefinition DeepCloneWithWidth(decimal? width)
        {
            var result = new ColumnDefinition(
                                 this.ColumnWidthBehavior.DeepClone(),
                                 this.ColumnWrapBehavior.DeepClone(),
                                 width,
                                 this.WidthUnitOfMeasure?.DeepClone(),
                                 this.IsFrozen.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="WidthUnitOfMeasure" />.
        /// </summary>
        /// <param name="widthUnitOfMeasure">The new <see cref="WidthUnitOfMeasure" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ColumnDefinition" /> using the specified <paramref name="widthUnitOfMeasure" /> for <see cref="WidthUnitOfMeasure" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ColumnDefinition DeepCloneWithWidthUnitOfMeasure(UnitOfMeasure? widthUnitOfMeasure)
        {
            var result = new ColumnDefinition(
                                 this.ColumnWidthBehavior.DeepClone(),
                                 this.ColumnWrapBehavior.DeepClone(),
                                 this.Width?.DeepClone(),
                                 widthUnitOfMeasure,
                                 this.IsFrozen.DeepClone());

            return result;
        }

        /// <summary>
        /// Deep clones this object with a new <see cref="IsFrozen" />.
        /// </summary>
        /// <param name="isFrozen">The new <see cref="IsFrozen" />.  This object will NOT be deep cloned; it is used as-is.</param>
        /// <returns>New <see cref="ColumnDefinition" /> using the specified <paramref name="isFrozen" /> for <see cref="IsFrozen" /> and a deep clone of every other property.</returns>
        [SuppressMessage("Microsoft.Design", "CA1002:DoNotExposeGenericLists")]
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        [SuppressMessage("Microsoft.Design", "CA1054:UriParametersShouldNotBeStrings")]
        [SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly")]
        [SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1711:IdentifiersShouldNotHaveIncorrectSuffix")]
        [SuppressMessage("Microsoft.Naming", "CA1715:IdentifiersShouldHaveCorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords")]
        [SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames")]
        [SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
        [SuppressMessage("Microsoft.Naming", "CA1722:IdentifiersShouldNotHaveIncorrectPrefix")]
        [SuppressMessage("Microsoft.Naming", "CA1725:ParameterNamesShouldMatchBaseDeclaration")]
        [SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms")]
        [SuppressMessage("Microsoft.Naming", "CA2204:Literals should be spelled correctly")]
        [SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")]
        public ColumnDefinition DeepCloneWithIsFrozen(bool isFrozen)
        {
            var result = new ColumnDefinition(
                                 this.ColumnWidthBehavior.DeepClone(),
                                 this.ColumnWrapBehavior.DeepClone(),
                                 this.Width?.DeepClone(),
                                 this.WidthUnitOfMeasure?.DeepClone(),
                                 isFrozen);

            return result;
        }

        /// <inheritdoc />
        [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
        public override string ToString()
        {
            var result = Invariant($"Vuescape.DotNet.Domain.ColumnDefinition: ColumnWidthBehavior = {this.ColumnWidthBehavior.ToString() ?? "<null>"}, ColumnWrapBehavior = {this.ColumnWrapBehavior.ToString() ?? "<null>"}, Width = {this.Width?.ToString(CultureInfo.InvariantCulture) ?? "<null>"}, WidthUnitOfMeasure = {this.WidthUnitOfMeasure?.ToString() ?? "<null>"}, IsFrozen = {this.IsFrozen.ToString(CultureInfo.InvariantCulture) ?? "<null>"}.");

            return result;
        }
    }
}